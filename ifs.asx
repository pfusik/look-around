; Iterated Function System

MSX	equ	1
TEST_OVERFLOW	equ	0
HAVE_CLS	equ	1
SCREEN_CHANNEL	equ	$60

	org	start
mulLookups	org	*+$1400
colMask	org	*+$100
colByte	org	*+$100
lineLo	org	*+$100
lineHi	org	*+$100
branchTable	org	*+$100

ptr	equ	$80	2
y	equ	$82
defsIndex	equ	$83
step	equ	$84	2
signs	equ	$86
currentBranch	equ	$87
pLimit	equ	$88

	ift	MSX
vbl
	jsr	player
	lda	msx_line
	and	#$1f
	bne	no_next
	lda	note_delay
	cmp	#14
	beq	next
no_next
	jmp	$e462	;xitvbv
	eif

main
	ldx	#0
	ldy	#4
	lda	#$80
init_col_1
	sta	colMask,x
	pha
	tya
	sta	colByte,x
	pla
	lsr	@
	bcc	init_col_2
	ror	@
	iny
init_col_2
	inx
	bne	init_col_1
	stx	defsIndex

 ift	MSX
	stx	^28
	mva	#3	^2f
	ldy	<vbl
	ldx	>vbl
	lda	#7
	jsr	$e45c	;setvbv
 els
	mwa	#next	$208
 eif

 ift	HAVE_CLS
	mwa	#screen_device	$344+SCREEN_CHANNEL
	mwa	#$808	$34a+SCREEN_CHANNEL
	ldx	#3
	jsr	screen_cio
next
	cli
	mwa	#0	$348+SCREEN_CHANNEL
	lda	#$7d
	ldx	#11
	jsr	screen_cio
 els
next
:!MSX	cli
	ldx	#12
	jsr	screen_cio
	mwa	#screen_device	$344+SCREEN_CHANNEL
	mva	#8	$34b+SCREEN_CHANNEL
	ldx	#3
	jsr	screen_cio
 eif

	ldy	#0
	lda	$58
	ldx	$59
init_rows_1
	sta	lineLo,y
	pha
	txa:sta	lineHi,y
	pla
	add	#40
	scc:inx
	iny
	bne	init_rows_1
; y=0

	ldx	defsIndex
	cpx	#DEFS_LEN
	scc:ldx	#0
	mva	defs,x+	$2c8
	sta	$2c6
	mva	defs,x+	$2c5
	sty	ptr
	mva	>mulLookups	ptr+1
	mva	#case_0-branch	currentBranch

new_1
	mva	defs,x+	pLimit
	lda	currentBranch
new_2
	sta	branchTable,y+
	cpy	pLimit
	bne	new_2
	sbc	#case_0-case_1	+
	sta	currentBranch
	mva	defs,x+	signs
	jsr	init2MulLookups
	jsr	init2MulLookups
	ldy	pLimit
	bne	new_1

	lda	defs,x+
	mvy	defs,x+	y
	stx	defsIndex
	jmp	set

case_4
	lda	mulLookups+$1200,x
	adc	mulLookups+$1300,y
	sta	y
	lda	mulLookups+$1000,x
	add	mulLookups+$1100,y
	jmp	set
case_3
	lda	mulLookups+$e00,x
	adc	mulLookups+$f00,y
	sta	y
	lda	mulLookups+$c00,x
	add	mulLookups+$d00,y
	jmp	set
case_2
	lda	mulLookups+$a00,x
	adc	mulLookups+$b00,y
	sta	y
	lda	mulLookups+$800,x
	add	mulLookups+$900,y
	jmp	set
case_1
	lda	mulLookups+$600,x
	adc	mulLookups+$700,y
	sta	y
	lda	mulLookups+$400,x
	add	mulLookups+$500,y
	jmp	set
case_0
	lda	mulLookups+$200,x
	adc	mulLookups+$300,y
	sta	y
	lda	mulLookups,x
	add	mulLookups+$100,y
set
	tax
	ldy	^2a
	mva	branchTable,y	branch-1
	ldy	y
	ift	TEST_OVERFLOW
	cpy #192
	bcc	no_overflow
	lsr:rne ^1a
no_overflow
	eif

	mva	lineLo,y	ptr
	mva	lineHi,y	ptr+1
	ldy	colByte,x
	lda	colMask,x
	ora:sta	(ptr),y
	ldy	y
	clc:bcc	*
branch

init2MulLookups
	ldy	defs,x
	lda	#0
	jsr	initMulLookup
	ldy	defs,x+
	lda	defs,x
initMulLookup
	inx
	stx	defsIndex
	sty	step
	ldy	#0
	lsr	signs
	scc:dey
	sty	step+1
	sta	(ptr),0
	ldx	#0
initMulLookup_1
	txa
	adc	step
	tax
	lda	step+1
	adc	(ptr),y+
	sta	(ptr),y
	bne	initMulLookup_1
	inc	ptr+1
	ldx	defsIndex
	rts

screen_cio
	stx	$342+SCREEN_CHANNEL
	ldx	#SCREEN_CHANNEL
	jmp	$e456

screen_device
	dta	c'S:',$9b

defs
; Sierpinski triangle
 ift 0
	dta	$94,$0a
	dta	85,%0000
	dta	128,0,64
	dta	0,128,1
	dta	85+85,%0000
	dta	128,0,0
	dta	0,128,96
	dta	0,%0000
	dta	128,0,127
	dta	0,128,96
	dta	128,96
 eif
; crystal 4
	dta	$72,$0a
	dta	25,%0000
	dta	65,0,100
	dta	0,65,3
	dta	25+25,%0000
	dta	65,0,30
	dta	0,65,125
	dta	25+25+25,%0000
	dta	65,0,170
	dta	0,65,125
	dta	0,%0100
	dta	94,164,14
	dta	-164-1,94,156
	dta	135,6
; Sierpinski Pentagon
	dta	$44,$0c
	dta	51,%0000
	dta	97,0,79
	dta	0,97,3
	dta	51*2,%0000
	dta	97,0,142
	dta	0,97,48
	dta	51*3,%0000
	dta	97,0,18
	dta	0,97,48
	dta	51*4,%0000
	dta	97,0,41
	dta	0,97,119
	dta	0,%0000
	dta	97,0,118
	dta	0,97,119
	dta	129,5
; Barnsley Fern
	dta	$b2,$0c
	dta	186,%0010	; p, %dcba signs
	dta	217,-9-1,40	; a,b,e
	dta	9,217,-5-1	; c,d,f
	dta	186+33,%0100
	dta	50,57,6
	dta	-57-1,50,129
	dta	186+33+33,%1110
	dta	63,-70-1,85
	dta	-64-1,-40-1,215
	dta	0,%0110
	dta	14,-19-1,45
	dta	-19-1,26,170
	dta	114,47 ; invariant point x,y
; Tree
	dta	$e8,$04
	dta	76,%0100
	dta	49,124,14
	dta	-88,110,61
	dta	76+76,%0010
	dta	118,-100,151
	dta	64,92,-3
	dta	76+76+12,%1101
	dta	-14,17,140
	dta	-115,-28,208
	dta	76+76+12+12,%1011
	dta	-8,-17,143
	dta	120,-5,82
	dta	0,%0001
	dta	-163,0,223
	dta	0,128,44
	dta	63,74
; Heighway dragon
	dta	$38,$04
	dta	128,%0010
	dta	128,-128-1,168
	dta	128,128,-12
	dta	0,%0010
	dta	128,-128-1,64
	dta	128,128,-12
	dta	128,96
; tower
	dta	$08,$00
	dta	64,%0000
	dta	192,0,6
	dta	0,88,125
	dta	64+64,%0000
	dta	192,0,58
	dta	0,88,125
	dta	0,%0000
	dta	128,0,64
	dta	0,168,1
	dta	128,125
; Levy Dragon
	dta	$24,$08
	dta	128,%0010
	dta	128,-128-1,64
	dta	128,128,0
	dta	0,%0100
	dta	128,128,64
	dta	-128-1,128,127
	dta	128,188
DEFS_LEN	equ	*-defs

	ift	MSX
SAP	equ	0
player
	icl	'msx.asx'
	eif

	run	main
	end
